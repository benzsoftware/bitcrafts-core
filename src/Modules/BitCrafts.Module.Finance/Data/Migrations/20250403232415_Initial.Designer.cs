// <auto-generated />
using System;
using BitCrafts.Module.Finance.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BitCrafts.Module.Finance.Data.Migrations
{
    [DbContext(typeof(FinanceDbContext))]
    [Migration("20250403232415_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BitCrafts.Module.Finance.Abstraction.Data.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountName")
                        .HasColumnType("text");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("text");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("BitCrafts.Module.Finance.Abstraction.Data.BankTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("BankAccountId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.ToTable("BankTransactions");
                });

            modelBuilder.Entity("BitCrafts.Module.Finance.Abstraction.Data.BankTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("DestinationAccountId")
                        .HasColumnType("integer");

                    b.Property<int?>("DestinationTransactionId")
                        .HasColumnType("integer");

                    b.Property<int>("SourceAccountId")
                        .HasColumnType("integer");

                    b.Property<int?>("SourceTransactionId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TransferDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DestinationAccountId");

                    b.HasIndex("DestinationTransactionId");

                    b.HasIndex("SourceAccountId");

                    b.HasIndex("SourceTransactionId");

                    b.ToTable("BankTransfers");
                });

            modelBuilder.Entity("BitCrafts.Modules.Demo.UserAccounts.Abstraction.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BitCrafts.Module.Finance.Abstraction.Data.BankAccount", b =>
                {
                    b.HasOne("BitCrafts.Modules.Demo.UserAccounts.Abstraction.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BitCrafts.Module.Finance.Abstraction.Data.BankTransaction", b =>
                {
                    b.HasOne("BitCrafts.Module.Finance.Abstraction.Data.BankAccount", "BankAccount")
                        .WithMany("Transactions")
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankAccount");
                });

            modelBuilder.Entity("BitCrafts.Module.Finance.Abstraction.Data.BankTransfer", b =>
                {
                    b.HasOne("BitCrafts.Module.Finance.Abstraction.Data.BankAccount", "DestinationAccount")
                        .WithMany()
                        .HasForeignKey("DestinationAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BitCrafts.Module.Finance.Abstraction.Data.BankTransaction", "DestinationTransaction")
                        .WithMany()
                        .HasForeignKey("DestinationTransactionId");

                    b.HasOne("BitCrafts.Module.Finance.Abstraction.Data.BankAccount", "SourceAccount")
                        .WithMany()
                        .HasForeignKey("SourceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BitCrafts.Module.Finance.Abstraction.Data.BankTransaction", "SourceTransaction")
                        .WithMany()
                        .HasForeignKey("SourceTransactionId");

                    b.Navigation("DestinationAccount");

                    b.Navigation("DestinationTransaction");

                    b.Navigation("SourceAccount");

                    b.Navigation("SourceTransaction");
                });

            modelBuilder.Entity("BitCrafts.Module.Finance.Abstraction.Data.BankAccount", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
